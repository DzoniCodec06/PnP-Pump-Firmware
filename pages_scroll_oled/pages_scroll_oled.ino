#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Wire.h>
#include <Adafruit_NeoPixel.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define RST_PIN   -1
#define PIN        2
#define NUMPIXELS  7

Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, RST_PIN);

int btn_down;
int btn_up;
int btn_select;

#define btn_up_pin 15
#define btn_down_pin 14
#define btn_select_pin 26

const unsigned char home [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xc6, 0x00, 0xc6, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xc6, 0xfc, 0xc6, 0x00, 0xc6, 0xc6, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xc6, 0xc6, 0xc6, 0x00, 0xc6, 0xc6, 0xb6, 0xc6, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xfc, 0xc6, 0xfc, 0x00, 0xfc, 0xc6, 0xb6, 0xc6, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xc0, 0xc6, 0xc0, 0x00, 0xc0, 0xc6, 0xb6, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xc0, 0xc6, 0xc0, 0x00, 0xc0, 0x7e, 0xb6, 0xc0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char blow [] PROGMEM = {
  0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 
	0x7e, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x14, 0x80, 0x00, 0x63, 0x0c, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x88, 0x22, 0x40, 0x00, 0x63, 0x0c, 0x3e, 0x6b, 0x00, 0x00, 0x00, 0x00, 
	0x89, 0xff, 0xe0, 0x00, 0x7e, 0x0c, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x88, 0x22, 0x40, 0x00, 
	0x63, 0x0c, 0x63, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x88, 0x22, 0x80, 0x00, 0x63, 0x0c, 0x63, 0x6b, 
	0x00, 0x00, 0x00, 0x00, 0x50, 0x14, 0x00, 0x00, 0x7e, 0x3f, 0x3e, 0x36, 0x00, 0x00, 0x00, 0x00, 
	0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'suck', 65x10px
const unsigned char suck [] PROGMEM = {
  0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 
	0x3e, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x50, 0x94, 0x00, 0x00, 0x63, 0x00, 0x00, 0x60, 
	0x00, 0x00, 0x00, 0x00, 0x89, 0x22, 0x00, 0x00, 0x60, 0x63, 0x3f, 0x63, 0x00, 0x00, 0x00, 0x00, 
	0x8b, 0xff, 0xc0, 0x00, 0x3e, 0x63, 0x60, 0x66, 0x00, 0x00, 0x00, 0x00, 0x89, 0x22, 0x00, 0x00, 
	0x03, 0x63, 0x60, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x88, 0xa2, 0x00, 0x00, 0x63, 0x63, 0x60, 0x66, 
	0x00, 0x00, 0x00, 0x00, 0x50, 0x14, 0x00, 0x00, 0x3e, 0x3f, 0x3f, 0x63, 0x00, 0x00, 0x00, 0x00, 
	0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'pedal', 65x10px
const unsigned char pedal [] PROGMEM = {
	0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x18, 0x00, 
	0xe0, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x03, 0x18, 0x00, 0x18, 0x00, 0x60, 0x00, 0x00, 0x00, 
	0x84, 0x00, 0x00, 0x03, 0x19, 0xf1, 0xf9, 0xf0, 0x60, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x03, 
	0x1b, 0x1b, 0x18, 0x18, 0x60, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x03, 0xf3, 0xfb, 0x19, 0xf8, 
	0x60, 0x00, 0x00, 0x00, 0xb9, 0x00, 0x00, 0x03, 0x03, 0x03, 0x1b, 0x18, 0x60, 0x00, 0x00, 0x00, 
	0x81, 0x00, 0x00, 0x03, 0x01, 0xf1, 0xf9, 0xf9, 0xf8, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'power', 65x10px
const unsigned char power [] PROGMEM = {
	0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x01, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x81, 0xe0, 0x00, 0x01, 0x8c, 0xf9, 0xac, 0xf8, 0xdc, 0x00, 0x00, 0x00, 0x78, 0x40, 0x00, 0x01, 
	0x8d, 0x8d, 0xad, 0x8c, 0xe0, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00, 0x01, 0xf9, 0x8d, 0xad, 0xfc, 
	0xc0, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x01, 0x81, 0x8d, 0xad, 0x80, 0xc0, 0x00, 0x00, 0x00, 
	0x22, 0x00, 0x00, 0x01, 0x80, 0xf8, 0xd8, 0xf8, 0xc0, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'shutdown', 65x10px
const unsigned char shutdown [] PROGMEM = {
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 
	0xf9, 0x80, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x01, 0x8d, 0x80, 0x00, 0x30, 
	0x0c, 0x00, 0x00, 0x00, 0x88, 0x80, 0x00, 0x01, 0x81, 0xf9, 0x8c, 0xfc, 0xfc, 0xf9, 0xad, 0xf8, 
	0x88, 0x80, 0x00, 0x00, 0xf9, 0x8d, 0x8c, 0x31, 0x8d, 0x8d, 0xad, 0x8c, 0x80, 0x80, 0x00, 0x00, 
	0x0d, 0x8d, 0x8c, 0x31, 0x8d, 0x8d, 0xad, 0x8c, 0x80, 0x80, 0x00, 0x01, 0x8d, 0x8d, 0x8c, 0x31, 
	0x8d, 0x8d, 0xad, 0x8c, 0x80, 0x80, 0x00, 0x00, 0xf9, 0x8c, 0xfc, 0x30, 0xfc, 0xf8, 0xd9, 0x8c, 
	0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'standby', 65x10px
const unsigned char standby [] PROGMEM = {
	0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x01, 
	0xf0, 0x60, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x03, 0x18, 0x60, 0x00, 0x00, 
	0x1b, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x03, 0x01, 0xf9, 0xf3, 0xf1, 0xfb, 0xf3, 0x18, 0x00, 
	0x88, 0x00, 0x00, 0x01, 0xf0, 0x60, 0x1b, 0x1b, 0x1b, 0x1b, 0x18, 0x00, 0x88, 0x00, 0x00, 0x00, 
	0x18, 0x61, 0xfb, 0x1b, 0x1b, 0x1b, 0x18, 0x00, 0x86, 0x00, 0x00, 0x03, 0x18, 0x63, 0x1b, 0x1b, 
	0x1b, 0x19, 0xf8, 0x00, 0xc1, 0x00, 0x00, 0x01, 0xf0, 0x61, 0xfb, 0x19, 0xf9, 0xf0, 0x18, 0x00, 
	0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x3e, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'bar', 109x16px
const unsigned char bar [] PROGMEM = {
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x30, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x60, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
};

const int options = 6;
const unsigned char* optionsArray[options] = {
  suck,
	blow,
  power,
  pedal,
  standby,
  shutdown,
};

const int optionsWidths[options] = {
  65,
  65,
  71,
  70,
  86,
  95,
};

const int optionsHeights[options] = {
  10,
  10,
  12,
  12,
  10,
  10,
};

int counter = 0;

void drawMenus(int fM, int sM, char dirr) {
  oled.clearDisplay();
  oled.drawBitmap(0, 0, home, 128, 64, WHITE);
  oled.drawBitmap(10, 25, optionsArray[fM], 95, 12, WHITE);
  //oled.drawBitmap(5, 22, bar, 109, 16, WHITE); // FIRST 
  oled.drawBitmap(10, 45, optionsArray[sM], 95, 12, WHITE);
  //oled.drawBitmap(5, 42, bar, 109, 16, WHITE); // SECOND 
  oled.drawBitmap(5, dirr == 'd' ? 42 : 22, bar, 109, 16, WHITE);
  oled.fillRect(118,  * 10, 3, 3, WHITE);
  oled.display();
}


void setup() {
  Serial.begin(115200);
  // Set custom I2C pins for RP2040
  Wire.setSDA(4); // Set SDA pin to GPIO 4
  Wire.setSCL(5); // Set SCL pin to GPIO 5

  // Begin I2C communication
  Wire.begin();

  if (!oled.begin(SSD1306_SWITCHCAPVCC, 0x3C)) for (;;);

  pinMode(btn_up_pin, INPUT_PULLUP);
  pinMode(btn_down_pin, INPUT_PULLUP);
  pinMode(btn_select_pin, INPUT_PULLUP);

  drawMenus(0, 1, 'u');
}

void loop() {
  btn_down = digitalRead(btn_down_pin);
  btn_select = digitalRead(btn_select_pin);
  btn_up = digitalRead(btn_up_pin);

  if (btn_down == LOW) {
    counter < 5 ? counter += 1 : counter = 5;
    drawMenus(counter - 1, counter, 'd');
    delay(250);
  } else if (btn_select == LOW) {

  } else if (btn_up == LOW) {
    counter > 0 ? counter -= 1 : counter = 0;
    drawMenus(counter, counter + 1, 'u');
    delay(250);
  }
}

































